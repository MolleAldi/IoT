#include <Bridge.h>
#include <Temboo.h>
#include <YunServer.h>
#include <YunClient.h>

int outputPin = 13;

YunServer server;
String startString;
long hits = 0;

char old[4];
char oldtemp[5];

int maxCalls = 3;
int calls = 0;

void setup() {
  Serial.begin(9600);

  delay(4000);
  while (!Serial);
  Bridge.begin();

  pinMode(outputPin, OUTPUT);
  pinMode(A0, OUTPUT);
  pinMode(A2, OUTPUT);
  digitalWrite(A0, HIGH);
  digitalWrite(A2, LOW);

  server.listenOnLocalhost();
  server.begin();

  pinMode(outputPin, OUTPUT);

  Serial.println("Setup complete.\n");
}

void loop() {
  if (calls < maxCalls) {
    digitalWrite(outputPin, LOW);
    Serial.print("Calling AppendRow Choreo #");
    Serial.println(calls);
    runAppendRow();
    calls++;
  } else {
    Serial.println("Skipping to save Temboo calls. Adjust maxCalls as required.");
    digitalWrite(outputPin, HIGH);
    delay(1000);
    digitalWrite(outputPin, LOW);
    delay(1000);
    digitalWrite(outputPin, HIGH);
    delay(1000);
    digitalWrite(outputPin, LOW);
    delay(1000);
    digitalWrite(outputPin, HIGH);
    delay(1000);
    digitalWrite(outputPin, LOW);
    delay(1000);
  }
  delay(3000);
}



void runAppendRow() {

  TembooChoreo AppendRowChoreo;

  AppendRowChoreo.begin();

  AppendRowChoreo.setAccountName("mollealdi");
  AppendRowChoreo.setAppKeyName("Temp-15");
  AppendRowChoreo.setAppKey("bbcd264d7e9c4a68ac6fbdacdb020244");

  Process time;
  time.runShellCommand("date");
  String timeString = "";
  while (time.available()) {
    char c = time.read();
    timeString += c;
  }

  int sensorValue = analogRead(A1);
  // convert the reading to millivolts:
  float voltage = sensorValue * (5000.0f / 1024.0f);
  // convert the millivolts to temperature celsius:
  float temperature = (voltage - 500.0f) / 10.0f;

  Serial.print("Temperature is ");
  Serial.println(temperature);
  Bridge.get(old, oldtemp , 4);
  Serial.print("Saved temp is ");
  Serial.println(oldtemp);
  float foldtemp = atof(oldtemp);
  float dif = temperature - foldtemp;
  dtostrf(temperature, 4, 2, oldtemp);
  Bridge.put(old, oldtemp);
  Serial.print("New saved temperature (oldtemp) is ");
  Serial.println(oldtemp);
  Serial.print("Temp dif is ");
  Serial.println(dif);

  // Set profile to use for execution
  AppendRowChoreo.setProfile("GoogleBasicAuthAccount");

  AppendRowChoreo.addInput("ClientSecret", "gQWOWUYBICDfiWeCTIqx9_YV");
  AppendRowChoreo.addInput("RefreshToken", "1/hRRbHU63OQBXgymjtqgJ4puty81Z9Cv_Omv0zBvogak");
  AppendRowChoreo.addInput("RowData", timeString + ", " + temperature + ", " + dif);
  AppendRowChoreo.addInput("SpreadsheetTitle", "Temp-15");
  AppendRowChoreo.addInput("ClientID", "554984198746-qaalkbt14jdkpv1a8de29dlg777jgqvo.apps.googleusercontent.com");

  AppendRowChoreo.setChoreo("/Library/Google/Spreadsheets/AppendRow");

  unsigned int returnCode = AppendRowChoreo.run();

  if (returnCode == 0) {
    digitalWrite(outputPin, HIGH);
    Serial.println();
    Serial.println("Success");
    Serial.println();
  }
  else {
    Serial.println();
    Serial.println("NOT SUCCESFULL!!!");
    Serial.println();
    digitalWrite(outputPin, HIGH);
    delay(1000);
    digitalWrite(outputPin, LOW);
    delay(1000);
    digitalWrite(outputPin, HIGH);
    delay(1000);
    digitalWrite(outputPin, LOW);
    delay(1000);
    digitalWrite(outputPin, HIGH);
    delay(1000);
    digitalWrite(outputPin, LOW);
    delay(1000);
  }

  AppendRowChoreo.close();
  if (dif > 0.1) {
    Serial.println("Calling GetTemperature Choreo...");
    runGetTemperature();
    Serial.println("Calling TextToSpeech Choreo...");
    runCaptureTextToSpeechPrompt();
  }

  Serial.println();
  Serial.println("Waiting ...");
  Serial.println();

}

void runGetTemperature() {
  TembooChoreo GetWeatherByAddressChoreo;

  // Invoke the Temboo client
  GetWeatherByAddressChoreo.begin();

  // Set Temboo account credentials
  GetWeatherByAddressChoreo.setAccountName("mollealdi");
  GetWeatherByAddressChoreo.setAppKeyName("Temp-15");
  GetWeatherByAddressChoreo.setAppKey("bbcd264d7e9c4a68ac6fbdacdb020244");

  // Set Choreo inputs
  GetWeatherByAddressChoreo.addInput("Units", "c");
  GetWeatherByAddressChoreo.addInput("Address", "Laureles, Medellin");
  GetWeatherByAddressChoreo.addInput("Day", "1");

  // Identify the Choreo to run
  GetWeatherByAddressChoreo.setChoreo("/Library/Yahoo/Weather/GetWeatherByAddress");

  // add an output filter to extract the current temperature
  GetWeatherByAddressChoreo.addOutputFilter("temperature", "/rss/channel/item/yweather:condition/@temp", "Response");

  // Run the Choreo
  unsigned int returnCode = GetWeatherByAddressChoreo.run();

  while (GetWeatherByAddressChoreo.available()) {

    char c = GetWeatherByAddressChoreo.read();
    Serial.print(c);
  }


  Serial.println();
  GetWeatherByAddressChoreo.close();
}

void runCaptureTextToSpeechPrompt() {
  TembooChoreo CaptureTextToSpeechPromptChoreo;

  // Invoke the Temboo client
  CaptureTextToSpeechPromptChoreo.begin();

  // Set Temboo account credentials
  CaptureTextToSpeechPromptChoreo.setAccountName("mollealdi");
  CaptureTextToSpeechPromptChoreo.setAppKeyName("Temp-15");
  CaptureTextToSpeechPromptChoreo.setAppKey("bbcd264d7e9c4a68ac6fbdacdb020244");

  // Set profile to use for execution
  CaptureTextToSpeechPromptChoreo.setProfile("NEXMO");
  // Identify the Choreo to run
  CaptureTextToSpeechPromptChoreo.setChoreo("/Library/Nexmo/Voice/CaptureTextToSpeechPrompt");

  // Run the Choreo
  unsigned int returnCode = CaptureTextToSpeechPromptChoreo.run();

  // Read and print the error message
  while (CaptureTextToSpeechPromptChoreo.available()) {
    char c = CaptureTextToSpeechPromptChoreo.read();
    Serial.print(c);
  }
  Serial.println();
  CaptureTextToSpeechPromptChoreo.close();
}
